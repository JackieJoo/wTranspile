format: willfile-1.0.0
about:
  name: wTranspilationStrategy
  description: >-
    Aggregator of strategies to transpile JS code. It provides unified
    programmatic and CL interfaces to transpile/optimize/minimize/beautify code
    by one or several transpilers in series. More strategies could be added as
    plugins. Default options of transpilation can be written into a config file
    to avoid retyping. Use the module to utilize the power of open source
    transpilation tools in single package.
  enabled: 1
  version: 0.3.56
  interpreters:
    - nodejs >= 6.0.0
    - chrome >= 60.0.0
    - firefox >= 60.0.0
  keywords:
    - wTools
path:
  module.willfiles:
    path: out/wTranspilationStrategy.out.will.yml
    criterion:
      predefined: 1
  module.original.willfiles:
    path:
      - .im.will.yml
      - .ex.will.yml
    criterion:
      predefined: 1
  module.dir:
    path: out/
    criterion:
      predefined: 1
  module.common:
    path: out/wTranspilationStrategy.out
    criterion:
      predefined: 1
  local:
    criterion:
      predefined: 1
  remote:
    criterion:
      predefined: 1
  in:
    path: ..
  temp:
    path: out
  out:
    path: out
  out.debug:
    path: ./out/debug
    criterion:
      debug: 1
  out.release:
    path: ./out/release
    criterion:
      debug: 0
  proto:
    path: ./proto
  repository:
    path: 'git+https:///github.com/Wandalen/wTranspilationStrategy.git'
  bugs:
    path: 'https:///github.com/Wandalen/wTranspilationStrategy/issues'
  exported.dir.proto.export:
    path: ./proto
    criterion:
      default: 1
      debug: 1
      raw: 1
      proto: 1
      export: 1
      tar: 1
      public: 1
  exported.files.proto.export:
    path:
      - proto
      - proto/dwtools
      - proto/dwtools/Tools.s
      - proto/dwtools/abase
      - proto/dwtools/amid
      - proto/dwtools/amid/-l9
      - proto/dwtools/amid/-l9/transpilationStrategy
      - proto/dwtools/amid/-l9/transpilationStrategy/Exec
      - proto/dwtools/amid/-l9/transpilationStrategy/IncludeBase.s
      - proto/dwtools/amid/-l9/transpilationStrategy/IncludeTop.s
      - proto/dwtools/amid/-l9/transpilationStrategy/MainBase.s
      - proto/dwtools/amid/-l9/transpilationStrategy/MainTop.s
      - proto/dwtools/amid/-l9/transpilationStrategy/l3
      - proto/dwtools/amid/-l9/transpilationStrategy/l3/SessionAbstract.s
      - proto/dwtools/amid/-l9/transpilationStrategy/l3/SessionPartial.s
      - proto/dwtools/amid/-l9/transpilationStrategy/l3/SessionTop.s
      - proto/dwtools/amid/-l9/transpilationStrategy/l3/StrategyAbstract.s
      - proto/dwtools/amid/-l9/transpilationStrategy/l5_strategy
      - proto/dwtools/amid/-l9/transpilationStrategy/l5_strategy/Babel.s
      - proto/dwtools/amid/-l9/transpilationStrategy/l5_strategy/Closure.s
      - proto/dwtools/amid/-l9/transpilationStrategy/l5_strategy/Prepack.s
      - proto/dwtools/amid/-l9/transpilationStrategy/l5_strategy/Uglify.s
      - proto/dwtools/amid/-l9.test
      - proto/dwtools/amid/-l9.test/TranspilationStrategy.test.s
      - proto/dwtools/atop
      - proto/dwtools/atop/transpilationStrategy
      - proto/dwtools/atop/transpilationStrategy/Exec
      - proto/dwtools/atop/transpilationStrategy/IncludeBase.s
      - proto/dwtools/atop/transpilationStrategy/IncludeMid.s
      - proto/dwtools/atop/transpilationStrategy/MainBase.s
      - proto/dwtools/atop/transpilationStrategy/MainTop.s
      - proto/dwtools/atop/transpilationStrategy/l3
      - proto/dwtools/atop/transpilationStrategy/l3/Concatenator.s
      - proto/dwtools/atop/transpilationStrategy/l3/Multiple.s
      - proto/dwtools/atop/transpilationStrategy/l3/Single.s
      - proto/dwtools/atop/transpilationStrategy/l3/Stage.s
      - proto/dwtools/atop/transpilationStrategy/l3/Transpiler.s
      - proto/dwtools/atop/transpilationStrategy/l5_concatenator
      - proto/dwtools/atop/transpilationStrategy/l5_concatenator/JavaScript.s
      - proto/dwtools/atop/transpilationStrategy/l5_transpiler
      - proto/dwtools/atop/transpilationStrategy/l5_transpiler/Babel.s
      - proto/dwtools/atop/transpilationStrategy/l5_transpiler/Closure.s
      - proto/dwtools/atop/transpilationStrategy/l5_transpiler/Nop.s
      - proto/dwtools/atop/transpilationStrategy/l5_transpiler/Prepack.s
      - proto/dwtools/atop/transpilationStrategy/l5_transpiler/Uglify.s
      - proto/dwtools/atop/transpilationStrategy.test
      - >-
        proto/dwtools/atop/transpilationStrategy.test/TranspilationStrategy.test.s
    criterion:
      default: 1
      debug: 1
      raw: 1
      proto: 1
      export: 1
      tar: 1
      public: 1
submodule: {}
reflector:
  reflect.proto.:
    src:
      filePath:
        'path::proto': 'path::out.*=1'
    criterion:
      debug: 0
    mandatory: 1
    inherit:
      - predefined.*
  reflect.proto.debug:
    src:
      filePath:
        'path::proto': 'path::out.*=1'
    criterion:
      debug: 1
    mandatory: 1
    inherit:
      - predefined.*
  reflect.submodules:
    src:
      filePath:
        'submodule::*/exported::*=1/path::exportedDir*=1': 'path::out.*=1'
    criterion:
      debug: 1
    mandatory: 1
    inherit:
      - predefined.*
  exported.proto.export:
    src:
      filePath:
        .: null
      prefixPath: proto
    criterion:
      default: 1
      debug: 1
      raw: 1
      proto: 1
      export: 1
      tar: 1
      public: 1
    mandatory: 1
  exported.files.proto.export:
    src:
      filePath: 'path::exported.files.proto.export'
      basePath: .
      prefixPath: 'path::exported.dir.proto.export'
    criterion:
      default: 1
      debug: 1
      raw: 1
      proto: 1
      export: 1
      tar: 1
      public: 1
    recursive: 0
    mandatory: 1
step:
  clean.out.:
    criterion:
      debug: 0
    opts:
      filePath: 'path::out.debug'
    inherit:
      - files.delete
  clean.out.debug:
    criterion:
      debug: 1
    opts:
      filePath: 'path::out.debug'
    inherit:
      - files.delete
  reflect.proto.:
    criterion:
      debug: 0
      raw: 0
    opts:
      reflector: 'reflector::reflect.proto.*=1'
    inherit:
      - files.reflect
  reflect.proto.debug:
    criterion:
      debug: 1
      raw: 0
    opts:
      reflector: 'reflector::reflect.proto.*=1'
    inherit:
      - files.reflect
  reflect.proto.raw:
    criterion:
      debug: 0
      raw: 1
    opts:
      reflector: 'reflector::reflect.proto.*=1'
    inherit:
      - files.reflect
  reflect.proto.debug.raw:
    criterion:
      debug: 1
      raw: 1
    opts:
      reflector: 'reflector::reflect.proto.*=1'
    inherit:
      - files.reflect
  reflect.submodules.:
    criterion:
      debug: 1
      raw: 0
    opts:
      reflector: 'reflector::reflect.submodules*=1'
    inherit:
      - files.reflect
  reflect.submodules.raw:
    criterion:
      debug: 1
      raw: 1
    opts:
      reflector: 'reflector::reflect.submodules*=1'
    inherit:
      - files.reflect
  reflect.submodules:
    criterion:
      debug: 1
    opts:
      reflector: 'reflector::reflect.submodules*'
    inherit:
      - files.reflect
  export.proto:
    criterion:
      debug: 1
      proto: 1
    opts:
      export: 'path::proto'
      tar: 0
    inherit:
      - module.export
build:
  debug.raw:
    criterion:
      default: 1
      debug: 1
      raw: 1
    steps:
      - 'step::clean.out*=1'
      - 'step::reflect.proto.*=1'
  debug.compiled:
    criterion:
      debug: 1
      raw: 0
    steps:
      - 'step::clean.out*=1'
      - 'step::reflect.proto.*=1'
  release.raw:
    criterion:
      debug: 0
      raw: 1
    steps:
      - 'step::clean.out*=1'
      - 'step::reflect.proto.*=1'
  release.compiled:
    criterion:
      debug: 0
      raw: 0
    steps:
      - 'step::clean.out*=1'
      - 'step::reflect.proto.*=1'
  all:
    steps:
      - 'build::debug.raw'
      - 'build::release.compiled'
  proto.export:
    criterion:
      default: 1
      debug: 1
      raw: 1
      proto: 1
      export: 1
      tar: 1
      public: 1
    steps:
      - 'build::debug.raw'
      - 'step::export.proto'
exported:
  proto.export:
    version: 0.3.56
    criterion:
      default: 1
      debug: 1
      raw: 1
      proto: 1
      export: 1
      tar: 1
      public: 1
    exportedReflector: 'reflector::exported.proto.export'
    exportedFilesReflector: 'reflector::exported.files.proto.export'
    exportedDirPath: 'path::exported.dir.proto.export'
    exportedFilesPath: 'path::exported.files.proto.export'
